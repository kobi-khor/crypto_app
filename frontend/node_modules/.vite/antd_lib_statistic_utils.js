import {
  require_padStart
} from "./chunk-5BEK57TW.js";
import "./chunk-DGV5CE4I.js";
import {
  __commonJS
} from "./chunk-DNTJHIQS.js";

// node_modules/@babel/runtime/helpers/interopRequireDefault.js
var require_interopRequireDefault = __commonJS({
  "node_modules/@babel/runtime/helpers/interopRequireDefault.js"(exports, module) {
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {
        "default": obj
      };
    }
    module.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/arrayWithHoles.js
var require_arrayWithHoles = __commonJS({
  "node_modules/@babel/runtime/helpers/arrayWithHoles.js"(exports, module) {
    function _arrayWithHoles(arr) {
      if (Array.isArray(arr))
        return arr;
    }
    module.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/iterableToArrayLimit.js
var require_iterableToArrayLimit = __commonJS({
  "node_modules/@babel/runtime/helpers/iterableToArrayLimit.js"(exports, module) {
    function _iterableToArrayLimit(arr, i) {
      var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
      if (_i == null)
        return;
      var _arr = [];
      var _n = true;
      var _d = false;
      var _s, _e;
      try {
        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);
          if (i && _arr.length === i)
            break;
        }
      } catch (err) {
        _d = true;
        _e = err;
      } finally {
        try {
          if (!_n && _i["return"] != null)
            _i["return"]();
        } finally {
          if (_d)
            throw _e;
        }
      }
      return _arr;
    }
    module.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/arrayLikeToArray.js
var require_arrayLikeToArray = __commonJS({
  "node_modules/@babel/runtime/helpers/arrayLikeToArray.js"(exports, module) {
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) {
        arr2[i] = arr[i];
      }
      return arr2;
    }
    module.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js
var require_unsupportedIterableToArray = __commonJS({
  "node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js"(exports, module) {
    var arrayLikeToArray = require_arrayLikeToArray();
    function _unsupportedIterableToArray(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return arrayLikeToArray(o, minLen);
    }
    module.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/nonIterableRest.js
var require_nonIterableRest = __commonJS({
  "node_modules/@babel/runtime/helpers/nonIterableRest.js"(exports, module) {
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    module.exports = _nonIterableRest, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/@babel/runtime/helpers/slicedToArray.js
var require_slicedToArray = __commonJS({
  "node_modules/@babel/runtime/helpers/slicedToArray.js"(exports, module) {
    var arrayWithHoles = require_arrayWithHoles();
    var iterableToArrayLimit = require_iterableToArrayLimit();
    var unsupportedIterableToArray = require_unsupportedIterableToArray();
    var nonIterableRest = require_nonIterableRest();
    function _slicedToArray(arr, i) {
      return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();
    }
    module.exports = _slicedToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;
  }
});

// node_modules/antd/lib/statistic/utils.js
var require_utils = __commonJS({
  "node_modules/antd/lib/statistic/utils.js"(exports) {
    "use strict";
    var _interopRequireDefault = require_interopRequireDefault();
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.formatCountdown = formatCountdown;
    exports.formatTimeStr = formatTimeStr;
    var _slicedToArray2 = _interopRequireDefault(require_slicedToArray());
    var _padStart = _interopRequireDefault(require_padStart());
    var timeUnits = [
      ["Y", 1e3 * 60 * 60 * 24 * 365],
      ["M", 1e3 * 60 * 60 * 24 * 30],
      ["D", 1e3 * 60 * 60 * 24],
      ["H", 1e3 * 60 * 60],
      ["m", 1e3 * 60],
      ["s", 1e3],
      ["S", 1]
    ];
    function formatTimeStr(duration, format) {
      var leftDuration = duration;
      var escapeRegex = /\[[^\]]*]/g;
      var keepList = (format.match(escapeRegex) || []).map(function(str) {
        return str.slice(1, -1);
      });
      var templateText = format.replace(escapeRegex, "[]");
      var replacedText = timeUnits.reduce(function(current, _ref) {
        var _ref2 = (0, _slicedToArray2["default"])(_ref, 2), name = _ref2[0], unit = _ref2[1];
        if (current.indexOf(name) !== -1) {
          var value = Math.floor(leftDuration / unit);
          leftDuration -= value * unit;
          return current.replace(new RegExp("".concat(name, "+"), "g"), function(match) {
            var len = match.length;
            return (0, _padStart["default"])(value.toString(), len, "0");
          });
        }
        return current;
      }, templateText);
      var index = 0;
      return replacedText.replace(escapeRegex, function() {
        var match = keepList[index];
        index += 1;
        return match;
      });
    }
    function formatCountdown(value, config) {
      var _config$format = config.format, format = _config$format === void 0 ? "" : _config$format;
      var target = new Date(value).getTime();
      var current = Date.now();
      var diff = Math.max(target - current, 0);
      return formatTimeStr(diff, format);
    }
  }
});

// dep:antd_lib_statistic_utils
var antd_lib_statistic_utils_default = require_utils();
export {
  antd_lib_statistic_utils_default as default
};
//# sourceMappingURL=antd_lib_statistic_utils.js.map
